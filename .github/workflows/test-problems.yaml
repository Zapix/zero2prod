name: run-rust-tests-for-problems
run-name: ${{ github.actor }} is running rust for zero2prod app
on: [ push ]
jobs:
  check:
    name: Check code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install sqlx-cli
        run: cargo install sqlx-cli

      - name: Prepare sqlx to build offline
        run: cargo sqlx prepare --check

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image:
          postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install sqlx-cli
        run: cargo install sqlx-cli

      - name: Install sqlx-cli
        run: cargo install sqlx-cli

      - name: Prepare sqlx to build offline
        run: cargo sqlx prepare --check

      - name: Install clippy
        run: rustup component add clippy

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    services:
      postgres:
        image:
          postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image:
          redis
        ports:
          - 6379:6379
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install sqlx-cli
        run: cargo install sqlx-cli

      - name: Prepare .env for tests
        run: cp test.env .env

      - name: Prepare database
        run: SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin

      - name: List cargo commands
        run: cargo --list

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: tarpaulin
          args: --ignore-tests --out html --out xml --output-dir coverage

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage
